/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gameoflife;

/**
 *
 * @author rajesh
 */
import java.awt.Color;
import java.util.*;
import java.awt.Image;
import java.awt.Graphics;
import java.util.Timer;
import java.util.TimerTask;
public class GOL extends javax.swing.JFrame {

    /**
     * Creates new form GOL
     */
    final int heig = 100, weid = 200;
    boolean [][] currentMove  = new boolean[heig][weid], nextMove = new boolean [heig][weid];
    boolean play;
    Image offScreenImg;
    Graphics offScreenGraph;
    
    
    public GOL() {
        initComponents();
        offScreenImg = createImage(jPanel1.getWidth(), jPanel1.getHeight());
        offScreenGraph = offScreenImg.getGraphics();
        Timer time = new Timer();
        TimerTask task = new TimerTask(){
            public void run(){
                if(play){
                    for(int i=1; i<heig ; i++)
                    {
                        for(int j=0; j< weid ; j++)
                         {
                             nextMove[i][j] = gol_rules(i, j);
                         }
                    }
                    for(int i=1; i<heig ; i++)
                    {
                        for(int j=0; j< weid ; j++)
                         {
                             currentMove[i][j] = nextMove[i][j];
                         }
                    }
                  paint_screen();  
                }  
            }
        };
        time.scheduleAtFixedRate(task, 0, 100);
        paint_screen();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentResized(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 594, Short.MAX_VALUE)
        );

        jButton1.setText("Reset");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Play");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 821, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void paint_screen()
    {
       offScreenGraph.setColor(jPanel1.getBackground());
       offScreenGraph.fillRect(0, 0, jPanel1.getWidth(), jPanel1.getHeight());
       //Drawing gliders in panel.
       for(int i = 0; i<heig ; i++)
       {
           for(int j = 0 ; j<weid ; j++)
           {
               if(currentMove[i][j])
               {   offScreenGraph.setColor(Color.YELLOW);
                   int x = j * jPanel1.getWidth()/weid;
                   int y = i * jPanel1.getHeight()/heig;
                  offScreenGraph.fillRect(x, y, jPanel1.getWidth()/weid, jPanel1.getHeight()/heig);
               }
               
           }
        }
       //Drawing rectangale in panel.
       offScreenGraph.setColor(Color.BLACK);
       for(int i = 1; i< heig; i++)
       {
           int y = i * jPanel1.getHeight()/heig;
           offScreenGraph.drawLine(0, y, jPanel1.getWidth(), y);
       }
       for(int j = 1; j<weid ; j++)
       {
          int x = j * jPanel1.getWidth()/weid;
          offScreenGraph.drawLine(x, 0, x, jPanel1.getHeight()); 
       }
       
       jPanel1.getGraphics().drawImage(offScreenImg, 0, 0, jPanel1);
    }
    
    private boolean gol_rules(int i, int j)
    {
        int neighbors = 0;
        if(j>0)// I am checking the beggning cell condition
        {
            if(currentMove[i][j-1])     //if it's not the fist cell then it's going to check the neighbor cell condition.
                neighbors++;            // increasing the neighbors
            if(i>0) //if it's not the top left corner cell
              if(currentMove[i-1][j-1]) 
                  neighbors++;
            if(i<heig-1) //if it's not the bottom left corner cell
              if(currentMove[i+1][j-1]) 
                  neighbors++;
        }
        if(j<weid-1)// I am checking if it is in the right hand side of the screen
        {
            if(currentMove[i][j+1])     
                neighbors++;            
            if(i>0) 
              if(currentMove[i-1][j+1]) 
                  neighbors++;
            if(i<heig-1) 
              if(currentMove[i+1][j+1]) 
                  neighbors++;
        }
        if(i>0) // Checking the upper 2 cellls of each glider
            if(currentMove[i-1][j]) neighbors++; //Checking the top neighbors 
        if(i<heig-1) // Checking the upper 2 cellls of each glider
            if(currentMove[i+1][j]) neighbors++; //Checking the bottom neighbors 
        
       if(neighbors == 3)   /* Rules: (ii) Any cell with 3 neighbors lives in to the next genneration (iv) if any DEAD cell with exactly 3 live neighbors, becomes alive cell.*/
           return true;
       if(currentMove[i][j] && neighbors ==2 ) //Rules : (ii)
           return true;
       
       //Rules : except those cases all re dies So,
       
       return false;
        
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        int j = weid * evt.getX() / jPanel1.getWidth();
        int i = heig * evt.getY() / jPanel1.getHeight();
        currentMove[i][j] = !currentMove[i][j];
        paint_screen();
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jPanel1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentResized
        // TODO add your handling code here:
        offScreenImg = createImage(jPanel1.getWidth(), jPanel1.getHeight());
        offScreenGraph = offScreenImg.getGraphics();
        paint_screen();
    }//GEN-LAST:event_jPanel1ComponentResized

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        play = !play;
        if(play)
        {
            jButton2.setText("Pause");
        }
        else
            jButton2.setText("Play");
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        currentMove  = new boolean[heig][weid];
        paint_screen();
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GOL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GOL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GOL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GOL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GOL().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
